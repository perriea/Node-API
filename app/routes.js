var sequelize  = require('sequelize');var bcrypt     = require('bcrypt');var salt       = bcrypt.genSaltSync(10);var Middleware = require('./middleware');var MUsers     = require("./models/users");var Example    = require("./controllers/example");var colors     = require('../config/color');module.exports = function(app, passport, error) {    app.get('/', function (req, res) {        res.status(200).send({ error: false, message: "Hello world !" });        console.log(colors.get('GET > / - 200'), req);    });    app.get('/example', Example.test);    app.get('/example/:num', Example.test);    // =====================================    // LOGIN ===============================    // =====================================    app.post('/api/auth/login', function(req, res, next) {        passport.authenticate('local-login', function(err, user, info)        {            if (err)                return res.status(500).json({ error: true, message: "Une erreur est survenue !" });            if (user)            {                req.session.id = user.dataValues.id;                req.session.email = user.dataValues.email;                return res.status(200).json({ error: false, message: info.message });            }            return res.status(400).json({ error: true, message: info.message });        })(req, res, next);    });    // =====================================    // SIGNUP ==============================    // =====================================    app.post('/api/auth/signup', function(req, res, next) {        passport.authenticate('local-signup', function(err, user, info)        {            if (err)                return res.status(500).json({ error: true, message: "Une erreur est survenue !" });            if (user)                return res.status(201).json({ error: false, message: info.message });            if (!user && info.message)                return res.status(400).json({ error: true, message: info.message });            return res.status(400).json({ error: true, message: "Une erreur est survenue !" });        })(req, res, next);    });    // =====================================    // GOOGLE ROUTES =======================    // =====================================    app.get('/api/auth/google', passport.authenticate('google', { scope : ['profile', 'email'] }));    app.get('/api/auth/google/callback', passport.authenticate('google', {        successRedirect : '/profile',        failureRedirect : '/'    }));    // =====================================    // GITHUB ROUTES =======================    // =====================================    app.get('/api/auth/github', passport.authenticate('github', { scope: [ 'user:email' ] }));    app.get('/api/auth/github/callback', passport.authenticate('github', {        successRedirect : '/profile',        failureRedirect : '/'    }));    // =====================================    // TWITTER ROUTES ======================    // =====================================    app.get('/api/auth/twitter', passport.authenticate('twitter'));    app.get('/api/auth/twitter/callback', passport.authenticate('twitter', {        successRedirect : '/profile',        failureRedirect : '/'    }));    // =====================================    // LOGOUT ==============================    // =====================================    app.get('/logout', function(req, res) {        req.logout();        res.status(200).json({ error: false, message: "Session over !" });    });    app.get('/admin', Middleware.isAdminIn, function(req, res) {        res.json({"error" : false, "session" : req.session.passport });        console.log(colors.warn('GET > ' + req.url + ' - 404'));    });    // All routes not found => 404    app.get('*', function(req, res) {        error.http_error(404);        //res.json({"error" : true, "status" : 404});        //console.log(colors.warn('GET > ' + req.url + ' - 404 - auth:'), req.session.username);    });};